apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: airflow
    app.kubernetes.io/instance: airflow
  name: airflow-cm
  namespace: airflow
data:
  AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres-svc:5432/airflow"
  AIRFLOW__CELERY__RESULT_BACKEND: "db+postgresql://airflow:airflow@postgres-svc/airflow"
  AIRFLOW__CELERY__BROKER_URL: "redis://:@redis-svc:6379/0"
  AIRFLOW__CORE__FERNET_KEY: "FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM="
  AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: "90"
  AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "True"
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  AIRFLOW__CORE__LOGGING_LEVEL: "INFO"
  AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: "120"
  AIRFLOW__SMTP__SMTP_HOST: "ns0.ovh.net"
  AIRFLOW__SMTP__SMTP_STARTTLS: "True"
  AIRFLOW__SMTP__SMTP_SSL: "False"
  AIRFLOW__SMTP__SMTP_USER: "postmaster@kaisens.fr"
  AIRFLOW__SMTP__SMTP_PASSWORD: "Kaisensdata.2021"
  AIRFLOW__SMTP__SMTP_PORT: "5025"
  AIRFLOW__SMTP__SMTP_MAIL_FROM: "ymadji@kaisensdata.fr"
  DRIVER_TWITTER_LOGGING_FOLDER: "/opt/airflow/dags/logs/twitter.log"
  DRIVER_TWITTER_DRIVER_PATH: "/opt/libs/chromedriver"
  DRIVER_TWITTER_CREDENTIALS_LOGIN: "petitpa88129487"
  DRIVER_TWITTER_CREDENTIALS_PASSWORD: "kaisensadmin"
  DRIVER_INSTAGRAM_DRIVER_PATH: "/opt/libs/chromedriver"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-nfs-pv
  namespace: airflow
spec:
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: "standard"
  nfs:
    path: /static/airflow
    server: nfs.kaisens.fr
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc
  namespace: airflow
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "standard"
  resources:
     requests:
       storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-redis
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
      app: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: redis
        app: airflow
    spec:
      containers:
      - name: redis
        image: redis:5.0
---
apiVersion: v1
kind: Service
metadata:
 name: redis-svc
 namespace: airflow
spec:
 ports:
 - port: 6379
 selector:
  service: redis
  app: airflow
# Postgres Depoyment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
      app: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: db
        app: airflow
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_USER
          value: "airflow"
        - name: POSTGRES_PASSWORD
          value: "airflow"
        - name: POSTGRES_DB
          value: "airflow"
        - name: POSTGRES_PORT
          value: "5432"
---
apiVersion: v1
kind: Service
metadata:
 name: postgres-svc
 namespace: airflow
spec:
 ports:
 - port: 5432
 selector:
  service: db
  app: airflow
# airflow webserver Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      service: webserver
      app: airflow
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        service: webserver
        app: airflow
    spec:
      containers:
      - name: airflow
        image: git.kaisens.fr:5050/harassement/airflow/airflow-core/core:latest
        args: ["webserver"]
        envFrom:
        - configMapRef:
            name: airflow-cm
        volumeMounts:
        - name: airflow-volume
          mountPath: /opt/airflow
      imagePullSecrets:
        - name: regcred
      initContainers:
      - name: init
        image: git.kaisens.fr:5050/harassement/airflow/airflow-core/core:latest
        command: ["/bin/bash"]
        args:
        - -c
        - airflow users list || ( airflow db init &&
          airflow users create
            --role Admin
            --username airflow
            --password airflow
            --email airflow@airflow.com
            --firstname airflow
            --lastname airflow )
        envFrom:
        - configMapRef:
            name: airflow-cm
        volumeMounts:
        - name: airflow-volume
          mountPath: /opt/airflow
        resources:
          limits:
            memory: "1.5Gi"
            cpu: 1.5
          requests:
            memory: "1Gi"
            cpu: 1
      volumes:
      - name: airflow-volume
        persistentVolumeClaim:
          claimName: airflow-pvc
---
apiVersion: v1
kind: Service
metadata:
 name: airflow-webserver-svc
 namespace: airflow
spec:
 ports:
 - port: 8080
 selector:
  service: webserver
  app: airflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      service: scheduler
      app: airflow
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        service: scheduler
        app: airflow
    spec:
      containers:
      - name: airflow
        image: git.kaisens.fr:5050/harassement/airflow/airflow-core/core:latest
        args: ["scheduler"]
        envFrom:
        - configMapRef:
            name: airflow-cm
        volumeMounts:
        - name: airflow-volume
          mountPath: /opt/airflow
        resources:
          limits:
            memory: "4Gi"
            cpu: 2
          requests:
            memory: "4Gi"
            cpu: 2
      volumes:
      - name: airflow-volume
        persistentVolumeClaim:
          claimName: airflow-pvc
      imagePullSecrets:
      - name: regcred
# airflow worker Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-worker
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      service: worker
      app: airflow
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        service: worker
        app: airflow
    spec:
      containers:
      - name: airflow
        image: git.kaisens.fr:5050/harassement/airflow/airflow-core/core:latest
        args: ["celery", "worker"]
        ports:
        - containerPort: 8793
          protocol: TCP
        envFrom:
        - configMapRef:
            name: airflow-cm
        volumeMounts:
        - name: airflow-volume
          mountPath: /opt/airflow
        - mountPath: /dev/shm
          name: dshm
        resources:
          limits:
            memory: "3Gi"
            cpu: 2
          requests:
            memory: "3Gi"
            cpu: 2

      volumes:
      - name: airflow-volume
        persistentVolumeClaim:
          claimName: airflow-pvc
      - name: dshm
        emptyDir:
          medium: Memory

      imagePullSecrets:
      - name: regcred

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: airflow-ingress
  namespace: airflow
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: airflow.kaisens.fr
    http:
      paths:
      - path: /
        backend:
          serviceName: airflow-webserver-svc
          servicePort: 8080
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa
  namespace: airflow
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: airflow-worker
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 80
